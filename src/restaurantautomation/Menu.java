/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurantautomation;

import javax.swing.JList;
import beans.Order;
import beans.itemSelected;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import operations.ItemOperations;

/**
 *
 * @author sukritidixit
 */


public class Menu extends javax.swing.JFrame {
    
    itemSelected item ;
    ItemOperations io = new ItemOperations();
    Order order;

    /**
     * Creates new form Menu
     */
    public Menu(int table_id) {
        order = new Order();
        order.setTableID(table_id);
        initComponents();
        this.setVisible(true);
        Starters_Panel.setVisible(false);
        Entrees_Panel.setVisible(false);
        Desserts_Panel.setVisible(false);
        Drinks_Panel.setVisible(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Entrees = new javax.swing.JButton();
        Deserts = new javax.swing.JButton();
        Drinks = new javax.swing.JButton();
        Starters = new javax.swing.JButton();
        Menu = new javax.swing.JTextField();
        Entrees_Panel = new javax.swing.JPanel();
        Chur_Naan = new javax.swing.JCheckBox();
        Masala_Dosa = new javax.swing.JCheckBox();
        Mutton_Rogan_Josh = new javax.swing.JCheckBox();
        Chicken_Biryani = new javax.swing.JCheckBox();
        Pav_Bhaji = new javax.swing.JCheckBox();
        Thali = new javax.swing.JCheckBox();
        Plain_Rice = new javax.swing.JCheckBox();
        chur_naan_qty = new javax.swing.JComboBox<>();
        masala_dosa_qty = new javax.swing.JComboBox<>();
        mutton_rj_qty = new javax.swing.JComboBox<>();
        chicken_biryani_qty = new javax.swing.JComboBox<>();
        pav_bhaji_qty = new javax.swing.JComboBox<>();
        thali_qty = new javax.swing.JComboBox<>();
        plain_rice_qty = new javax.swing.JComboBox<>();
        add_entrees = new javax.swing.JButton();
        Starters_Panel = new javax.swing.JPanel();
        Momos = new javax.swing.JCheckBox();
        Fish_Chips = new javax.swing.JCheckBox();
        Aloo_Tikki = new javax.swing.JCheckBox();
        Fried_Pickles = new javax.swing.JCheckBox();
        Dhokla = new javax.swing.JCheckBox();
        Chicken_Nuggets = new javax.swing.JCheckBox();
        Samosa = new javax.swing.JCheckBox();
        momos_qty = new javax.swing.JComboBox<>();
        fish_chips_qty = new javax.swing.JComboBox<>();
        aloo_tikki_qty = new javax.swing.JComboBox<>();
        fried_pickles_qty = new javax.swing.JComboBox<>();
        dhokla_qty = new javax.swing.JComboBox<>();
        chicken_nuggets_qty = new javax.swing.JComboBox<>();
        samosa_qty = new javax.swing.JComboBox<>();
        add_starters = new javax.swing.JButton();
        Desserts_Panel = new javax.swing.JPanel();
        Kunafa = new javax.swing.JCheckBox();
        Bakalava = new javax.swing.JCheckBox();
        Gajar_Halwa = new javax.swing.JCheckBox();
        Gulab_Jamun = new javax.swing.JCheckBox();
        Kaju_Katli = new javax.swing.JCheckBox();
        Tipsy = new javax.swing.JCheckBox();
        Choc_Pastry = new javax.swing.JCheckBox();
        kunafa_qty = new javax.swing.JComboBox<>();
        bakalava_qty = new javax.swing.JComboBox<>();
        gajar_halwa_qty = new javax.swing.JComboBox<>();
        gulab_jamun_qty = new javax.swing.JComboBox<>();
        kaju_katli_qty = new javax.swing.JComboBox<>();
        tipsy_qty = new javax.swing.JComboBox<>();
        choc_pastry_qty = new javax.swing.JComboBox<>();
        add_desserts = new javax.swing.JButton();
        Drinks_Panel = new javax.swing.JPanel();
        Jaljeera = new javax.swing.JCheckBox();
        Lassi = new javax.swing.JCheckBox();
        Ice_Tea = new javax.swing.JCheckBox();
        Berry_Smoothie = new javax.swing.JCheckBox();
        Red_Wine = new javax.swing.JCheckBox();
        Cold_Coffee = new javax.swing.JCheckBox();
        Vodka = new javax.swing.JCheckBox();
        jaljeera_qty = new javax.swing.JComboBox<>();
        lassi_qty = new javax.swing.JComboBox<>();
        ice_tea_qty = new javax.swing.JComboBox<>();
        berry_smoothie_qty = new javax.swing.JComboBox<>();
        red_wine_qty = new javax.swing.JComboBox<>();
        cold_coffee_qty = new javax.swing.JComboBox<>();
        vodka_qty = new javax.swing.JComboBox<>();
        add_drinks = new javax.swing.JButton();
        Show_Order = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Entrees.setText("Entrees");
        Entrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EntreesActionPerformed(evt);
            }
        });

        Deserts.setText("Deserts");
        Deserts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DesertsActionPerformed(evt);
            }
        });

        Drinks.setText("Drinks");
        Drinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DrinksActionPerformed(evt);
            }
        });

        Starters.setText("Starters");
        Starters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartersActionPerformed(evt);
            }
        });

        Menu.setText("         Menu");
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });

        Chur_Naan.setText("Chur Chur Naan & Chole");

        Masala_Dosa.setText("Masala Dosa");

        Mutton_Rogan_Josh.setText("Mutton Rogan Josh");
        Mutton_Rogan_Josh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Mutton_Rogan_JoshActionPerformed(evt);
            }
        });

        Chicken_Biryani.setText("Chicken Biryani");
        Chicken_Biryani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Chicken_BiryaniActionPerformed(evt);
            }
        });

        Pav_Bhaji.setText("Pav Bhaji");
        Pav_Bhaji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pav_BhajiActionPerformed(evt);
            }
        });

        Thali.setText("Thali");

        Plain_Rice.setText("Plain Rice");

        chur_naan_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        masala_dosa_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        mutton_rj_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        chicken_biryani_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        pav_bhaji_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        thali_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        plain_rice_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        add_entrees.setText("Add Entrees To Order");
        add_entrees.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_entreesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Entrees_PanelLayout = new javax.swing.GroupLayout(Entrees_Panel);
        Entrees_Panel.setLayout(Entrees_PanelLayout);
        Entrees_PanelLayout.setHorizontalGroup(
            Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Entrees_PanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_entrees)
                    .addGroup(Entrees_PanelLayout.createSequentialGroup()
                        .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Thali, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Pav_Bhaji)
                                .addComponent(Chicken_Biryani, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Masala_Dosa, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Chur_Naan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Mutton_Rogan_Josh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Plain_Rice))
                        .addGap(85, 85, 85)
                        .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chur_naan_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mutton_rj_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chicken_biryani_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pav_bhaji_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(thali_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plain_rice_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(masala_dosa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        Entrees_PanelLayout.setVerticalGroup(
            Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Entrees_PanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Chur_Naan)
                    .addComponent(chur_naan_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(masala_dosa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Masala_Dosa))
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Entrees_PanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(mutton_rj_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Entrees_PanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mutton_Rogan_Josh)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chicken_biryani_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Chicken_Biryani))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pav_bhaji_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Pav_Bhaji))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Thali)
                    .addComponent(thali_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Entrees_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Plain_Rice)
                    .addComponent(plain_rice_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(add_entrees, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        Momos.setText("Momos");

        Fish_Chips.setText("Fish n Chips");

        Aloo_Tikki.setText("Aloo Tikki");

        Fried_Pickles.setText("Fried Pickles");
        Fried_Pickles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Fried_PicklesActionPerformed(evt);
            }
        });

        Dhokla.setText("Dhokla");

        Chicken_Nuggets.setText("Chicken Nuggets");
        Chicken_Nuggets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Chicken_NuggetsActionPerformed(evt);
            }
        });

        Samosa.setText("Samosa");

        momos_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        momos_qty.setName(""); // NOI18N

        fish_chips_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        aloo_tikki_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        fried_pickles_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        dhokla_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        chicken_nuggets_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        samosa_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        add_starters.setText("Add Starters To Order");
        add_starters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_startersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Starters_PanelLayout = new javax.swing.GroupLayout(Starters_Panel);
        Starters_Panel.setLayout(Starters_PanelLayout);
        Starters_PanelLayout.setHorizontalGroup(
            Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Starters_PanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(add_starters, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Dhokla)
                    .addComponent(Fried_Pickles, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Fish_Chips, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Momos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Aloo_Tikki, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Chicken_Nuggets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Samosa))
                .addGap(88, 88, 88)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(samosa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chicken_nuggets_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(momos_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fish_chips_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(aloo_tikki_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fried_pickles_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dhokla_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(235, Short.MAX_VALUE))
        );
        Starters_PanelLayout.setVerticalGroup(
            Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Starters_PanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Momos)
                    .addComponent(momos_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fish_Chips)
                    .addComponent(fish_chips_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Aloo_Tikki)
                    .addComponent(aloo_tikki_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fried_Pickles)
                    .addComponent(fried_pickles_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Dhokla)
                    .addComponent(dhokla_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Chicken_Nuggets)
                    .addComponent(chicken_nuggets_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Starters_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Samosa)
                    .addComponent(samosa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(add_starters, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        Kunafa.setText("Kunafa");

        Bakalava.setText("Bakalava");

        Gajar_Halwa.setText("Gajar ka Halwa");

        Gulab_Jamun.setText("Gulab Jamun");
        Gulab_Jamun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Gulab_JamunActionPerformed(evt);
            }
        });

        Kaju_Katli.setText("Kaju Katli");

        Tipsy.setText("Tipsy");

        Choc_Pastry.setText("Chocolate Pastry");

        kunafa_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        bakalava_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        gajar_halwa_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        gulab_jamun_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        kaju_katli_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        tipsy_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        choc_pastry_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        add_desserts.setText("Add Desserts To Order");
        add_desserts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_dessertsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Desserts_PanelLayout = new javax.swing.GroupLayout(Desserts_Panel);
        Desserts_Panel.setLayout(Desserts_PanelLayout);
        Desserts_PanelLayout.setHorizontalGroup(
            Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Desserts_PanelLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_desserts)
                    .addGroup(Desserts_PanelLayout.createSequentialGroup()
                        .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Bakalava, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Kunafa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(Desserts_PanelLayout.createSequentialGroup()
                                    .addComponent(Gajar_Halwa, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(2, 2, 2)))
                            .addComponent(Gulab_Jamun, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Kaju_Katli)
                            .addComponent(Tipsy, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Choc_Pastry))
                        .addGap(70, 70, 70)
                        .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(choc_pastry_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tipsy_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kaju_katli_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gulab_jamun_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kunafa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bakalava_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gajar_halwa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(238, Short.MAX_VALUE))
        );
        Desserts_PanelLayout.setVerticalGroup(
            Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Desserts_PanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Kunafa)
                    .addComponent(kunafa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bakalava)
                    .addComponent(bakalava_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Gajar_Halwa)
                    .addComponent(gajar_halwa_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Gulab_Jamun)
                    .addComponent(gulab_jamun_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kaju_katli_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Kaju_Katli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipsy_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tipsy))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Desserts_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Choc_Pastry)
                    .addComponent(choc_pastry_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(add_desserts, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        Jaljeera.setText("Jaljeera");

        Lassi.setText("Lassi");

        Ice_Tea.setText("Ice Tea");

        Berry_Smoothie.setText("Berry Smoothie");
        Berry_Smoothie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Berry_SmoothieActionPerformed(evt);
            }
        });

        Red_Wine.setText("Red Wine");

        Cold_Coffee.setText("Cold Coffee");

        Vodka.setText("Vodka");

        jaljeera_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jaljeera_qty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jaljeera_qtyActionPerformed(evt);
            }
        });

        lassi_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        ice_tea_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        berry_smoothie_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        red_wine_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        cold_coffee_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        vodka_qty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        add_drinks.setText("Add Drinks To Order");
        add_drinks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_drinksActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Drinks_PanelLayout = new javax.swing.GroupLayout(Drinks_Panel);
        Drinks_Panel.setLayout(Drinks_PanelLayout);
        Drinks_PanelLayout.setHorizontalGroup(
            Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Drinks_PanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(add_drinks)
                    .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(Drinks_PanelLayout.createSequentialGroup()
                            .addComponent(Vodka)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vodka_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Drinks_PanelLayout.createSequentialGroup()
                            .addComponent(Cold_Coffee, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cold_coffee_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Drinks_PanelLayout.createSequentialGroup()
                            .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Red_Wine)
                                .addComponent(Berry_Smoothie, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Lassi, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Jaljeera, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                .addComponent(Ice_Tea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(69, 69, 69)
                            .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(red_wine_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jaljeera_qty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lassi_qty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ice_tea_qty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(berry_smoothie_qty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(242, Short.MAX_VALUE))
        );
        Drinks_PanelLayout.setVerticalGroup(
            Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Drinks_PanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Drinks_PanelLayout.createSequentialGroup()
                        .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Jaljeera)
                            .addComponent(jaljeera_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Lassi)
                            .addComponent(lassi_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Ice_Tea)
                            .addComponent(ice_tea_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Berry_Smoothie)
                            .addComponent(berry_smoothie_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Red_Wine)
                            .addComponent(red_wine_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Cold_Coffee)
                        .addGap(6, 6, 6))
                    .addComponent(cold_coffee_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Drinks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Vodka)
                    .addComponent(vodka_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(add_drinks, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        Show_Order.setText("Show Order");
        Show_Order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Show_OrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Deserts, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Entrees, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Menu, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(Starters, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                    .addComponent(Drinks, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Show_Order, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(175, 175, 175)
                .addComponent(Entrees_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(629, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(397, 397, 397)
                    .addComponent(Starters_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(497, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(407, 407, 407)
                    .addComponent(Desserts_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(542, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(417, 417, 417)
                    .addComponent(Drinks_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(529, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88)
                        .addComponent(Starters)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Entrees)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Deserts)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Drinks)
                        .addGap(81, 81, 81)
                        .addComponent(Show_Order, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(Entrees_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(713, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(32, 32, 32)
                    .addComponent(Starters_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(703, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(42, 42, 42)
                    .addComponent(Desserts_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(693, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(52, 52, 52)
                    .addComponent(Drinks_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(683, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartersActionPerformed
        // TODO add your handling code here:
        JList list = new JList();
        //list.setCellRenderer(new CheckboxListCellRenderer());
        
        Starters_Panel.setVisible(true);
        Entrees_Panel.setVisible(false);
        Desserts_Panel.setVisible(false);
        Drinks_Panel.setVisible(false);
    }//GEN-LAST:event_StartersActionPerformed

    private void Chicken_BiryaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Chicken_BiryaniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Chicken_BiryaniActionPerformed

    private void Fried_PicklesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Fried_PicklesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Fried_PicklesActionPerformed

    private void Gulab_JamunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Gulab_JamunActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Gulab_JamunActionPerformed

    private void Berry_SmoothieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Berry_SmoothieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Berry_SmoothieActionPerformed

    private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MenuActionPerformed

    private void Pav_BhajiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pav_BhajiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Pav_BhajiActionPerformed

    private void Chicken_NuggetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Chicken_NuggetsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Chicken_NuggetsActionPerformed

    private void EntreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EntreesActionPerformed
        // TODO add your handling code here:
        Starters_Panel.setVisible(false);
        Entrees_Panel.setVisible(true);
        Desserts_Panel.setVisible(false);
        Drinks_Panel.setVisible(false);
    }//GEN-LAST:event_EntreesActionPerformed

    private void DesertsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DesertsActionPerformed
        // TODO add your handling code here:
        Starters_Panel.setVisible(false);
        Entrees_Panel.setVisible(false);
        Desserts_Panel.setVisible(true);
        Drinks_Panel.setVisible(false);
    }//GEN-LAST:event_DesertsActionPerformed

    private void DrinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DrinksActionPerformed
        // TODO add your handling code here:
        Starters_Panel.setVisible(false);
        Entrees_Panel.setVisible(false);
        Desserts_Panel.setVisible(false);
        Drinks_Panel.setVisible(true);
    }//GEN-LAST:event_DrinksActionPerformed

    private void Show_OrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Show_OrderActionPerformed
        // TODO add your handling code here:
      //  this.setVisible(false);
        Order_GUI ao= new Order_GUI(order,this);
        //this.setVisible(false);
    }//GEN-LAST:event_Show_OrderActionPerformed

    private void add_entreesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_entreesActionPerformed
        // TODO add your handling code here:
        if (Chur_Naan.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Chur Chur Naan & Chole");
            item.setQuantity(chur_naan_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Chur Chur Naan & Chole").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Masala_Dosa.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Masala Dosa");
            item.setQuantity(masala_dosa_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Masala Dosa").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Mutton_Rogan_Josh.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Mutton Rogan Josh");
            item.setQuantity(mutton_rj_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Mutton Rogan Josh").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Chicken_Biryani.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Chicken Biryani");
            item.setQuantity(chicken_biryani_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Chicken Biryani").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Pav_Bhaji.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Pav Bhaji");
            item.setQuantity(pav_bhaji_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Pav Bhaji").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Thali.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Thali");
            item.setQuantity(thali_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Thali").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Plain_Rice.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Plain Rice");
            item.setQuantity(plain_rice_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Plain Rice").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
    }//GEN-LAST:event_add_entreesActionPerformed

    private void Mutton_Rogan_JoshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Mutton_Rogan_JoshActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Mutton_Rogan_JoshActionPerformed

    private void add_startersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_startersActionPerformed
        // TODO add your handling code here:
        if (Momos.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Momos");
            item.setQuantity(momos_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Momos").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Fish_Chips.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Fish n Chips");
            item.setQuantity(fish_chips_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Fish n Chips").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Aloo_Tikki.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Aloo Tikki");
            item.setQuantity(aloo_tikki_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Aloo Tikki").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Fried_Pickles.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Fried Pickles");
            item.setQuantity(fried_pickles_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Fried Pickles").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Dhokla.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Dhokla");
            item.setQuantity(dhokla_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Dhokla").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Chicken_Nuggets.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Chicken Nuggets");
            item.setQuantity(chicken_nuggets_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Chicken Nuggets").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Samosa.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Samosa");
            item.setQuantity(samosa_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Samosa").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
    }//GEN-LAST:event_add_startersActionPerformed

    private void add_dessertsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_dessertsActionPerformed
        // TODO add your handling code here:
        if (Kunafa.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Kunafa");
            item.setQuantity(kunafa_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Kunafa").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Bakalava.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Bakalava");
            item.setQuantity(bakalava_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Bakalava").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Gajar_Halwa.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Gajar Halwa");
            item.setQuantity(gajar_halwa_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Gajar Halwa").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Gulab_Jamun.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Gulab Jamun");
            item.setQuantity(gulab_jamun_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Gulab Jamun").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Kaju_Katli.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Kaju Katli");
            item.setQuantity(kaju_katli_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Kaju Katli").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Tipsy.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Tipsy");
            item.setQuantity(tipsy_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Tipsy").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Choc_Pastry.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Chocolate Pastry");
            item.setQuantity(choc_pastry_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Chocolate Pastry").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
    }//GEN-LAST:event_add_dessertsActionPerformed

    private void add_drinksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_drinksActionPerformed
        // TODO add your handling code here:
        if (Jaljeera.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Jaljeera");
            item.setQuantity(jaljeera_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Jaljeera").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Lassi.isSelected())
        {
            item = new itemSelected();
         item.setItem_name("Lassi");
            item.setQuantity(lassi_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Lassi").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);   
        }
        if (Ice_Tea.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Ice Tea");
            item.setQuantity(ice_tea_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Ice Tea").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Berry_Smoothie.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Berry Smoothie");
            item.setQuantity(berry_smoothie_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Berry Smoothie").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Red_Wine.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Red Wine");
            item.setQuantity(red_wine_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Red Wine").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Cold_Coffee.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Cold Coffee");
            item.setQuantity(cold_coffee_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Cold Coffee").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
        if (Vodka.isSelected())
        {
            item = new itemSelected();
            item.setItem_name("Vodka");
            item.setQuantity(vodka_qty.getSelectedIndex()+1);
            try {
                item.setItem_id(io.getItemByName("Vodka").getItemID());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
            order.setItems(item);
        }
    }//GEN-LAST:event_add_drinksActionPerformed

    private void jaljeera_qtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jaljeera_qtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jaljeera_qtyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
      
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox Aloo_Tikki;
    private javax.swing.JCheckBox Bakalava;
    private javax.swing.JCheckBox Berry_Smoothie;
    private javax.swing.JCheckBox Chicken_Biryani;
    private javax.swing.JCheckBox Chicken_Nuggets;
    private javax.swing.JCheckBox Choc_Pastry;
    private javax.swing.JCheckBox Chur_Naan;
    private javax.swing.JCheckBox Cold_Coffee;
    private javax.swing.JButton Deserts;
    private javax.swing.JPanel Desserts_Panel;
    private javax.swing.JCheckBox Dhokla;
    private javax.swing.JButton Drinks;
    private javax.swing.JPanel Drinks_Panel;
    private javax.swing.JButton Entrees;
    private javax.swing.JPanel Entrees_Panel;
    private javax.swing.JCheckBox Fish_Chips;
    private javax.swing.JCheckBox Fried_Pickles;
    private javax.swing.JCheckBox Gajar_Halwa;
    private javax.swing.JCheckBox Gulab_Jamun;
    private javax.swing.JCheckBox Ice_Tea;
    private javax.swing.JCheckBox Jaljeera;
    private javax.swing.JCheckBox Kaju_Katli;
    private javax.swing.JCheckBox Kunafa;
    private javax.swing.JCheckBox Lassi;
    private javax.swing.JCheckBox Masala_Dosa;
    private javax.swing.JTextField Menu;
    private javax.swing.JCheckBox Momos;
    private javax.swing.JCheckBox Mutton_Rogan_Josh;
    private javax.swing.JCheckBox Pav_Bhaji;
    private javax.swing.JCheckBox Plain_Rice;
    private javax.swing.JCheckBox Red_Wine;
    private javax.swing.JCheckBox Samosa;
    private javax.swing.JButton Show_Order;
    private javax.swing.JButton Starters;
    private javax.swing.JPanel Starters_Panel;
    private javax.swing.JCheckBox Thali;
    private javax.swing.JCheckBox Tipsy;
    private javax.swing.JCheckBox Vodka;
    private javax.swing.JButton add_desserts;
    private javax.swing.JButton add_drinks;
    private javax.swing.JButton add_entrees;
    private javax.swing.JButton add_starters;
    private javax.swing.JComboBox<String> aloo_tikki_qty;
    private javax.swing.JComboBox<String> bakalava_qty;
    private javax.swing.JComboBox<String> berry_smoothie_qty;
    private javax.swing.JComboBox<String> chicken_biryani_qty;
    private javax.swing.JComboBox<String> chicken_nuggets_qty;
    private javax.swing.JComboBox<String> choc_pastry_qty;
    private javax.swing.JComboBox<String> chur_naan_qty;
    private javax.swing.JComboBox<String> cold_coffee_qty;
    private javax.swing.JComboBox<String> dhokla_qty;
    private javax.swing.JComboBox<String> fish_chips_qty;
    private javax.swing.JComboBox<String> fried_pickles_qty;
    private javax.swing.JComboBox<String> gajar_halwa_qty;
    private javax.swing.JComboBox<String> gulab_jamun_qty;
    private javax.swing.JComboBox<String> ice_tea_qty;
    private javax.swing.JComboBox<String> jaljeera_qty;
    private javax.swing.JComboBox<String> kaju_katli_qty;
    private javax.swing.JComboBox<String> kunafa_qty;
    private javax.swing.JComboBox<String> lassi_qty;
    private javax.swing.JComboBox<String> masala_dosa_qty;
    private javax.swing.JComboBox<String> momos_qty;
    private javax.swing.JComboBox<String> mutton_rj_qty;
    private javax.swing.JComboBox<String> pav_bhaji_qty;
    private javax.swing.JComboBox<String> plain_rice_qty;
    private javax.swing.JComboBox<String> red_wine_qty;
    private javax.swing.JComboBox<String> samosa_qty;
    private javax.swing.JComboBox<String> thali_qty;
    private javax.swing.JComboBox<String> tipsy_qty;
    private javax.swing.JComboBox<String> vodka_qty;
    // End of variables declaration//GEN-END:variables
}
